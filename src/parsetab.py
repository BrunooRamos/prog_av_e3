
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'A ACTUALIZA AGREGA AGRUPANDO BORRA BY CAMBIA CLAVE COLUMNA COMMA COMO CONTANDO CREA CUENTA DATE DE DEFECTO DEL DISTINTOS DONDE DOT ELIMINA EN ENTRE ES ESTO ES_NULO EXISTE FLOAT GROUP IDENTIFIER INT LA LOS LPAREN METE MEZCLANDO MUCHO NO NULO NUMBER OPERATOR ORDENA PARECIDO POR PRIMA REFERENTE RPAREN SEMICOLON SETEA STRING TABLA TENIENDO TIRA TODO TRAEME TRANSFORMA UNICO VALORES VARCHAR WHERE Yusql_query : select_query\n                  | insert_query\n                  | update_query\n                  | delete_query\n                  | alter_queryselect_query : TRAEME selection DE LA TABLA IDENTIFIER group_by join condition SEMICOLONinsert_query : METE EN insertion LOS VALORES LPAREN value_list RPAREN SEMICOLONupdate_query : ACTUALIZA IDENTIFIER SETEA IDENTIFIER OPERATOR value condition SEMICOLONdelete_query : BORRA DE LA TABLA IDENTIFIER condition SEMICOLONalter_query : CAMBIA LA TABLA IDENTIFIER AGREGA LA COLUMNA column_data SEMICOLON\n                   | CAMBIA LA TABLA IDENTIFIER ELIMINA LA COLUMNA IDENTIFIER SEMICOLONcolumn_data : IDENTIFIER data_type constraints\n                   | IDENTIFIER data_typedata_type : VARCHAR LPAREN NUMBER RPAREN\n                 | INT\n                 | DATE\n                 | FLOATconstraints : NO NULO\n                   | UNICO\n                   | CLAVE PRIMAselection : TODO\n                 | CONTANDO LPAREN TODO RPAREN\n                 | LOS DISTINTOS IDENTIFIERjoin : empty\n            | MEZCLANDO IDENTIFIER EN IDENTIFIER DOT IDENTIFIER OPERATOR IDENTIFIER DOT IDENTIFIERgroup_by : empty\n                | AGRUPANDO POR IDENTIFIER grouping_conditiongrouping_condition : empty\n                         | WHERE DEL GROUP BY left_side_id OPERATOR valueleft_side_id : IDENTIFIER\n                    | IDENTIFIER LPAREN OPERATOR RPARENinsertion : IDENTIFIER\n                 | IDENTIFIER LPAREN column_list RPARENcolumn_list : IDENTIFIER\n                   | column_list COMMA IDENTIFIERvalue_list : value\n                  | value_list COMMA valuecondition : DONDE expression\n                 | emptyexpression : IDENTIFIER OPERATOR value\n                  | IDENTIFIER DOT IDENTIFIER OPERATOR value\n                  | IDENTIFIER ENTRE value Y valuevalue : NUMBER\n             | STRINGempty :'
    
_lr_action_items = {'TRAEME':([0,],[7,]),'METE':([0,],[8,]),'ACTUALIZA':([0,],[9,]),'BORRA':([0,],[10,]),'CAMBIA':([0,],[11,]),'$end':([1,2,3,4,5,6,64,75,85,95,96,97,],[0,-1,-2,-3,-4,-5,-9,-8,-7,-10,-11,-6,]),'TODO':([7,21,],[13,29,]),'CONTANDO':([7,],[14,]),'LOS':([7,23,24,47,],[15,31,-32,-33,]),'EN':([8,83,],[16,98,]),'IDENTIFIER':([9,16,22,25,27,32,34,36,48,53,67,68,71,72,77,98,116,120,121,127,],[17,24,30,33,35,39,42,45,62,66,79,81,83,84,88,109,119,123,124,130,]),'DE':([10,12,13,30,37,],[18,20,-21,-23,-22,]),'LA':([11,18,20,43,44,],[19,26,28,55,56,]),'LPAREN':([14,24,38,91,123,],[21,32,46,108,126,]),'DISTINTOS':([15,],[22,]),'SETEA':([17,],[25,]),'TABLA':([19,26,28,],[27,34,36,]),'RPAREN':([29,39,40,50,51,60,61,62,86,115,129,],[37,-34,47,-43,-44,73,-36,-35,-37,118,131,]),'VALORES':([31,],[38,]),'OPERATOR':([33,66,88,119,122,123,126,131,],[41,76,102,121,125,-30,129,-31,]),'AGREGA':([35,],[43,]),'ELIMINA':([35,],[44,]),'COMMA':([39,40,50,51,60,61,62,86,],[-34,48,-43,-44,74,-36,-35,-37,]),'NUMBER':([41,46,74,76,78,102,103,108,125,],[50,50,50,50,50,50,50,115,50,]),'STRING':([41,46,74,76,78,102,103,125,],[51,51,51,51,51,51,51,51,]),'DONDE':([42,45,49,50,51,57,58,69,70,84,99,100,128,130,],[53,-45,53,-43,-44,-45,-26,53,-24,-45,-27,-28,-29,-25,]),'SEMICOLON':([42,45,49,50,51,52,54,57,58,63,65,69,70,73,80,81,82,84,87,90,92,93,94,99,100,104,106,111,112,113,114,118,128,130,],[-45,-45,-45,-43,-44,64,-39,-45,-26,75,-38,-45,-24,85,95,96,97,-45,-40,-13,-15,-16,-17,-27,-28,-12,-19,-41,-42,-18,-20,-14,-29,-25,]),'AGRUPANDO':([45,],[59,]),'MEZCLANDO':([45,50,51,57,58,84,99,100,128,],[-45,-43,-44,71,-26,-45,-27,-28,-29,]),'Y':([50,51,89,],[-43,-44,103,]),'COLUMNA':([55,56,],[67,68,]),'POR':([59,],[72,]),'DOT':([66,109,124,],[77,116,127,]),'ENTRE':([66,],[78,]),'VARCHAR':([79,],[91,]),'INT':([79,],[92,]),'DATE':([79,],[93,]),'FLOAT':([79,],[94,]),'WHERE':([84,],[101,]),'NO':([90,92,93,94,118,],[105,-15,-16,-17,-14,]),'UNICO':([90,92,93,94,118,],[106,-15,-16,-17,-14,]),'CLAVE':([90,92,93,94,118,],[107,-15,-16,-17,-14,]),'DEL':([101,],[110,]),'NULO':([105,],[113,]),'PRIMA':([107,],[114,]),'GROUP':([110,],[117,]),'BY':([117,],[120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'usql_query':([0,],[1,]),'select_query':([0,],[2,]),'insert_query':([0,],[3,]),'update_query':([0,],[4,]),'delete_query':([0,],[5,]),'alter_query':([0,],[6,]),'selection':([7,],[12,]),'insertion':([16,],[23,]),'column_list':([32,],[40,]),'value':([41,46,74,76,78,102,103,125,],[49,61,86,87,89,111,112,128,]),'condition':([42,49,69,],[52,63,82,]),'empty':([42,45,49,57,69,84,],[54,58,54,70,54,100,]),'group_by':([45,],[57,]),'value_list':([46,],[60,]),'expression':([53,],[65,]),'join':([57,],[69,]),'column_data':([67,],[80,]),'data_type':([79,],[90,]),'grouping_condition':([84,],[99,]),'constraints':([90,],[104,]),'left_side_id':([120,],[122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> usql_query","S'",1,None,None,None),
  ('usql_query -> select_query','usql_query',1,'p_usql_query','usql_parser.py',119),
  ('usql_query -> insert_query','usql_query',1,'p_usql_query','usql_parser.py',120),
  ('usql_query -> update_query','usql_query',1,'p_usql_query','usql_parser.py',121),
  ('usql_query -> delete_query','usql_query',1,'p_usql_query','usql_parser.py',122),
  ('usql_query -> alter_query','usql_query',1,'p_usql_query','usql_parser.py',123),
  ('select_query -> TRAEME selection DE LA TABLA IDENTIFIER group_by join condition SEMICOLON','select_query',10,'p_select_query','usql_parser.py',127),
  ('insert_query -> METE EN insertion LOS VALORES LPAREN value_list RPAREN SEMICOLON','insert_query',9,'p_insert_query','usql_parser.py',132),
  ('update_query -> ACTUALIZA IDENTIFIER SETEA IDENTIFIER OPERATOR value condition SEMICOLON','update_query',8,'p_update_query','usql_parser.py',136),
  ('delete_query -> BORRA DE LA TABLA IDENTIFIER condition SEMICOLON','delete_query',7,'p_delete_query','usql_parser.py',140),
  ('alter_query -> CAMBIA LA TABLA IDENTIFIER AGREGA LA COLUMNA column_data SEMICOLON','alter_query',9,'p_alter_query','usql_parser.py',144),
  ('alter_query -> CAMBIA LA TABLA IDENTIFIER ELIMINA LA COLUMNA IDENTIFIER SEMICOLON','alter_query',9,'p_alter_query','usql_parser.py',145),
  ('column_data -> IDENTIFIER data_type constraints','column_data',3,'p_column_data','usql_parser.py',152),
  ('column_data -> IDENTIFIER data_type','column_data',2,'p_column_data','usql_parser.py',153),
  ('data_type -> VARCHAR LPAREN NUMBER RPAREN','data_type',4,'p_data_type','usql_parser.py',157),
  ('data_type -> INT','data_type',1,'p_data_type','usql_parser.py',158),
  ('data_type -> DATE','data_type',1,'p_data_type','usql_parser.py',159),
  ('data_type -> FLOAT','data_type',1,'p_data_type','usql_parser.py',160),
  ('constraints -> NO NULO','constraints',2,'p_constraints','usql_parser.py',164),
  ('constraints -> UNICO','constraints',1,'p_constraints','usql_parser.py',165),
  ('constraints -> CLAVE PRIMA','constraints',2,'p_constraints','usql_parser.py',166),
  ('selection -> TODO','selection',1,'p_selection','usql_parser.py',176),
  ('selection -> CONTANDO LPAREN TODO RPAREN','selection',4,'p_selection','usql_parser.py',177),
  ('selection -> LOS DISTINTOS IDENTIFIER','selection',3,'p_selection','usql_parser.py',178),
  ('join -> empty','join',1,'p_join','usql_parser.py',190),
  ('join -> MEZCLANDO IDENTIFIER EN IDENTIFIER DOT IDENTIFIER OPERATOR IDENTIFIER DOT IDENTIFIER','join',10,'p_join','usql_parser.py',191),
  ('group_by -> empty','group_by',1,'p_group_by','usql_parser.py',195),
  ('group_by -> AGRUPANDO POR IDENTIFIER grouping_condition','group_by',4,'p_group_by','usql_parser.py',196),
  ('grouping_condition -> empty','grouping_condition',1,'p_grouping_condition','usql_parser.py',200),
  ('grouping_condition -> WHERE DEL GROUP BY left_side_id OPERATOR value','grouping_condition',7,'p_grouping_condition','usql_parser.py',201),
  ('left_side_id -> IDENTIFIER','left_side_id',1,'p_left_side_id','usql_parser.py',205),
  ('left_side_id -> IDENTIFIER LPAREN OPERATOR RPAREN','left_side_id',4,'p_left_side_id','usql_parser.py',206),
  ('insertion -> IDENTIFIER','insertion',1,'p_insertion','usql_parser.py',210),
  ('insertion -> IDENTIFIER LPAREN column_list RPAREN','insertion',4,'p_insertion','usql_parser.py',211),
  ('column_list -> IDENTIFIER','column_list',1,'p_column_list','usql_parser.py',215),
  ('column_list -> column_list COMMA IDENTIFIER','column_list',3,'p_column_list','usql_parser.py',216),
  ('value_list -> value','value_list',1,'p_value_list','usql_parser.py',220),
  ('value_list -> value_list COMMA value','value_list',3,'p_value_list','usql_parser.py',221),
  ('condition -> DONDE expression','condition',2,'p_condition','usql_parser.py',225),
  ('condition -> empty','condition',1,'p_condition','usql_parser.py',226),
  ('expression -> IDENTIFIER OPERATOR value','expression',3,'p_expression','usql_parser.py',230),
  ('expression -> IDENTIFIER DOT IDENTIFIER OPERATOR value','expression',5,'p_expression','usql_parser.py',231),
  ('expression -> IDENTIFIER ENTRE value Y value','expression',5,'p_expression','usql_parser.py',232),
  ('value -> NUMBER','value',1,'p_value','usql_parser.py',241),
  ('value -> STRING','value',1,'p_value','usql_parser.py',242),
  ('empty -> <empty>','empty',0,'p_empty','usql_parser.py',246),
]
